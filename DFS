class Graph:
  
  def __init__(self, V):
    self.V=V
    self.adj  = [[] for i in range(V)]
    print(self.adj)
  
  def addEdge(self,a,b):
    self.adj[a].append(b)
    print(self.adj)

  def dfs__traversal(self,s):
    print("i am in dfs traversal def")

    visited = []
    for i in range(self.V):
      visited[i]=False
 
        
    stack = []
 
       
    stack.append(s)
 
    while (len(stack)):
            
        s = stack[-1]
        stack.pop()
 
            
        if (not visited[s]):
            print(s,end=' ')
            visited[s] = True
 
            
        for node in self.adj[s]:
            if (not visited[node]):
                stack.append(node)



n=(int)(input("Enter the no of verices : "))
g=Graph(n)
e=int(input("Enter no of edges : "))
for i in range(e):
  a=int(input())
  b=int(input())
  g.addEdge(a,b)

st=int(input("Enter the starting vertex : "))
print ("The DFS Traversal is : ")
g.dfs__traversal(st)

